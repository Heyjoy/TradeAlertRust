# Rust build artifacts
/target/
**/*.rs.bk

# Environment files with sensitive data
.env
.env.local
.env.production
.env.staging

# Database files
/data/
*.db
*.sqlite
*.sqlite3

# Configuration files with sensitive data
/config.toml
/config.local.toml
/config/config.toml
/config/config.local.toml

# Logs
*.log
logs/

# IDE and editor files
/.vscode/
/.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# SQLx offline query cache (contains compiled queries)
# Note: We commit .sqlx/ for Railway deployment compatibility
# /.sqlx/

# Temporary files
*.tmp
*.temp

# Backup files
*.bak
*.backup

# Runtime files
*.pid

# Coverage reports
/coverage/
*.profraw

# Docker volumes and data
/docker-data/

# ngrok configuration and logs
ngrok.yml
ngrok.log

# Email test outputs
email_test_output.txt

# Local development scripts (if any contain sensitive data)
# Uncomment if you have local scripts with credentials
# local_*.ps1
# local_*.sh

# Keep example files for reference
!*.example
!*_example.* 

# ======================================
# 📋 需求文档管理策略
# ======================================
# 需求文档本地Git管理，但不上传到GitHub
# 原因：包含产品策略、商业规划等敏感信息

# 忽略整个需求文档目录
/docs/Requirement/

# 但保留重要的示例和模板文件供团队参考
!/docs/Requirement/README.md
!/docs/Requirement/*_TEMPLATE.md
!/docs/Requirement/*_EXAMPLE.md

# 忽略需求管理脚本的输出文件
/scripts/requirement_check_output.txt
/scripts/compliance_report.html

# ======================================
# 📚 其他敏感文档管理
# ======================================
# 如果后续有其他敏感文档，可以在这里添加

# 商业计划和策略文档
/docs/business/
/docs/strategy/

# 用户数据分析报告
/docs/analytics/
/docs/user_data/

# 内部会议记录
/docs/meetings/
/docs/internal/ 